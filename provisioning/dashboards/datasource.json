{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "default": true,
        "type": "marcusolsson-static-datasource",
        "uid": "P1D2C73DC01F2359B"
      },
      "gridPos": {
        "h": 8,
        "w": 17,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": ["name", "oldValue", "newValue"],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "hidden": false,
            "id": "String",
            "labelWidth": 10,
            "queryField": {
              "label": "undefined:val-1 category",
              "value": "category"
            },
            "section": "",
            "title": "String",
            "tooltip": "",
            "type": "string",
            "uid": "0a15f927-e435-4678-8341-10f0e5caa3fb",
            "unit": "",
            "value": ""
          }
        ],
        "initial": {
          "code": "",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": false,
          "highlightColor": "red",
          "method": "query",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "",
          "confirm": false,
          "contentType": "application/json",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "method": "-",
          "payload": {},
          "payloadMode": "all"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.7.0",
      "targets": [
        {
          "datasource": {
            "type": "marcusolsson-static-datasource",
            "uid": "P1D2C73DC01F2359B"
          },
          "frame": {
            "fields": [
              {
                "config": {},
                "name": "value",
                "type": "string",
                "values": ["val-1", "val-2", "val-3"]
              },
              {
                "config": {},
                "name": "category",
                "type": "string",
                "values": ["cat-1", "cat-2", "cat-3"]
              }
            ],
            "meta": {},
            "name": "A"
          },
          "refId": "A"
        }
      ],
      "title": "Transform data - for Query Fields",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": ["value"],
            "keepFields": true,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "marcusolsson-static-datasource",
        "uid": "P1D2C73DC01F2359B"
      },
      "gridPos": {
        "h": 25,
        "w": 7,
        "x": 17,
        "y": 0
      },
      "id": 5,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": ["name", "oldValue", "newValue"],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "hidden": false,
            "id": "speed",
            "labelWidth": 10,
            "section": "",
            "title": "speed",
            "tooltip": "",
            "type": "string",
            "uid": "5fbcaea6-13d1-46b0-9f2f-a4ae21a95166",
            "unit": "",
            "value": ""
          },
          {
            "allowCustomValue": false,
            "id": "max",
            "labelWidth": 10,
            "options": [],
            "optionsSource": "Custom",
            "section": "",
            "title": "max",
            "tooltip": "",
            "type": "disabled",
            "uid": "15d744cd-1e4c-41b4-b703-51e560bf8065",
            "unit": "",
            "value": ""
          },
          {
            "allowCustomValue": false,
            "id": "min",
            "labelWidth": 10,
            "options": [],
            "optionsSource": "Custom",
            "section": "",
            "title": "min",
            "tooltip": "",
            "type": "disabled",
            "uid": "79a97013-7957-4426-b5e5-fb5143d91357",
            "unit": "",
            "value": ""
          },
          {
            "id": "maxArea",
            "labelWidth": 10,
            "rows": 10,
            "section": "",
            "title": "maxArea",
            "tooltip": "",
            "type": "disabledTextarea",
            "uid": "965c7503-f229-4549-b5df-24182e42ab1b",
            "unit": "",
            "value": ""
          },
          {
            "id": "minArea",
            "labelWidth": 10,
            "rows": 10,
            "section": "",
            "title": "minArea",
            "tooltip": "",
            "type": "disabledTextarea",
            "uid": "c9c4c436-d3e6-4f27-9d3a-91c3b9c2d5dd",
            "unit": "",
            "value": ""
          }
        ],
        "initial": {
          "code": "context.panel.patchFormValue({\n  \"speed\": \"15\",\n  \"max\": 220,\n  \"min\": 230,\n  \"maxArea\": 250,\n  \"minArea\": 260\n});\n",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": false,
          "highlightColor": "red",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "if (context.panel.response && context.panel.response.state === 'Done') {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.panel.initialRequest();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": true,
          "contentType": "application/json",
          "datasource": "PostgreSQL",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\n/**\n * Data Source payload\n */\nreturn payload;",
          "method": "datasource",
          "payload": {
            "0": "c",
            "1": "o",
            "2": "n",
            "3": "s",
            "4": "t",
            "5": " ",
            "6": "p",
            "7": "a",
            "8": "y",
            "9": "l",
            "10": "o",
            "11": "a",
            "12": "d",
            "13": " ",
            "14": "=",
            "15": " ",
            "16": "{",
            "17": "}",
            "18": ";",
            "19": "\n",
            "20": "\n",
            "21": "c",
            "22": "o",
            "23": "n",
            "24": "t",
            "25": "e",
            "26": "x",
            "27": "t",
            "28": ".",
            "29": "p",
            "30": "a",
            "31": "n",
            "32": "e",
            "33": "l",
            "34": ".",
            "35": "e",
            "36": "l",
            "37": "e",
            "38": "m",
            "39": "e",
            "40": "n",
            "41": "t",
            "42": "s",
            "43": ".",
            "44": "f",
            "45": "o",
            "46": "r",
            "47": "E",
            "48": "a",
            "49": "c",
            "50": "h",
            "51": "(",
            "52": "(",
            "53": "e",
            "54": "l",
            "55": "e",
            "56": "m",
            "57": "e",
            "58": "n",
            "59": "t",
            "60": ")",
            "61": " ",
            "62": "=",
            "63": ">",
            "64": " ",
            "65": "{",
            "66": "\n",
            "67": " ",
            "68": " ",
            "69": "i",
            "70": "f",
            "71": " ",
            "72": "(",
            "73": "!",
            "74": "e",
            "75": "l",
            "76": "e",
            "77": "m",
            "78": "e",
            "79": "n",
            "80": "t",
            "81": ".",
            "82": "v",
            "83": "a",
            "84": "l",
            "85": "u",
            "86": "e",
            "87": ")",
            "88": " ",
            "89": "{",
            "90": "\n",
            "91": " ",
            "92": " ",
            "93": " ",
            "94": " ",
            "95": "r",
            "96": "e",
            "97": "t",
            "98": "u",
            "99": "r",
            "100": "n",
            "101": ";",
            "102": "\n",
            "103": " ",
            "104": " ",
            "105": "}",
            "106": "\n",
            "107": "\n",
            "108": " ",
            "109": " ",
            "110": "p",
            "111": "a",
            "112": "y",
            "113": "l",
            "114": "o",
            "115": "a",
            "116": "d",
            "117": "[",
            "118": "e",
            "119": "l",
            "120": "e",
            "121": "m",
            "122": "e",
            "123": "n",
            "124": "t",
            "125": ".",
            "126": "i",
            "127": "d",
            "128": "]",
            "129": " ",
            "130": "=",
            "131": " ",
            "132": "e",
            "133": "l",
            "134": "e",
            "135": "m",
            "136": "e",
            "137": "n",
            "138": "t",
            "139": ".",
            "140": "v",
            "141": "a",
            "142": "l",
            "143": "u",
            "144": "e",
            "145": ";",
            "146": "\n",
            "147": "}",
            "148": ")",
            "149": "\n",
            "150": "\n",
            "151": "r",
            "152": "e",
            "153": "t",
            "154": "u",
            "155": "r",
            "156": "n",
            "157": " ",
            "158": "p",
            "159": "a",
            "160": "y",
            "161": "l",
            "162": "o",
            "163": "a",
            "164": "d",
            "165": ";",
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "update configuration set min=${payload.min}, max=${payload.max}, speed=${payload.speed} where name='$device'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "payloadMode": "custom"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.7.0",
      "title": "Initial patchFormValue",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "marcusolsson-static-datasource",
        "uid": "P1D2C73DC01F2359B"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "thresholdsStyle": {
              "mode": "color",
              "thresholds": []
            }
          },
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 35,
        "w": 4,
        "x": 0,
        "y": 8
      },
      "id": 1,
      "options": {
        "alwaysVisibleFilter": false,
        "autoScroll": true,
        "collapsedByDefault": false,
        "customValue": false,
        "displayMode": "table",
        "emptyValue": false,
        "favorites": {
          "addQuery": {},
          "datasource": "",
          "deleteQuery": {},
          "enabled": true,
          "getQuery": {},
          "storage": "browser"
        },
        "filter": true,
        "groupSelection": false,
        "header": true,
        "padding": 10,
        "persistent": false,
        "saveSelectedGroup": false,
        "saveSelectedGroupKey": "",
        "showGroupTotal": false,
        "showLabel": false,
        "showName": false,
        "showResetButton": false,
        "showTotal": false,
        "statusSort": false,
        "sticky": true,
        "tabsInOrder": true,
        "variable": "device"
      },
      "pluginVersion": "3.5.0",
      "type": "volkovlabs-variable-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PCC52D03280B7034C"
      },
      "gridPos": {
        "h": 9,
        "w": 13,
        "x": 4,
        "y": 8
      },
      "id": 2,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": ["name", "oldValue", "newValue"],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "fieldName": "max",
            "id": "max",
            "labelWidth": 10,
            "options": [],
            "queryField": {
              "label": "A:max",
              "refId": "A",
              "value": "max"
            },
            "section": "current",
            "title": "Max",
            "tooltip": "",
            "type": "disabled",
            "uid": "8285e945-b1cf-4dd6-9efd-8e322196222a",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "min",
            "id": "min",
            "labelWidth": 10,
            "options": [],
            "queryField": {
              "label": "A:min",
              "refId": "A",
              "value": "min"
            },
            "section": "current",
            "title": "Min",
            "tooltip": "",
            "type": "disabled",
            "uid": "6d3ca353-178b-4a7a-b23d-e548cf3d2437",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "speed",
            "id": "speed",
            "labelWidth": 10,
            "options": [],
            "queryField": {
              "label": "A:speed",
              "refId": "A",
              "value": "speed"
            },
            "section": "current",
            "title": "Speed",
            "tooltip": "",
            "type": "disabled",
            "uid": "b7c38a6c-6c59-41db-a439-1964d20e660b",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "max",
            "id": "max",
            "labelWidth": 10,
            "queryField": {
              "label": "A:max",
              "refId": "A",
              "value": "max"
            },
            "section": "new",
            "title": "Max",
            "tooltip": "",
            "type": "number",
            "uid": "3d3cf24f-7611-482d-b27b-b55621745dda",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "min",
            "id": "min",
            "labelWidth": 10,
            "queryField": {
              "label": "A:min",
              "refId": "A",
              "value": "min"
            },
            "section": "new",
            "title": "Min",
            "tooltip": "",
            "type": "number",
            "uid": "bc2c6772-5bbd-456d-9fe2-f1824c373c68",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "speed",
            "id": "speed",
            "labelWidth": 10,
            "max": 100,
            "min": 0,
            "queryField": {
              "label": "A:speed",
              "refId": "A",
              "value": "speed"
            },
            "section": "new",
            "step": 1,
            "title": "Speed",
            "tooltip": "",
            "type": "slider",
            "uid": "1918dc47-f686-4ca2-aeb3-7f21c360f621",
            "unit": "",
            "value": 0
          }
        ],
        "initial": {
          "code": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nconsole.log(payload);\ncontext.panel.setInitial(payload);\n\nreturn;",
          "contentType": "application/json",
          "datasource": "PostgreSQL",
          "getPayload": "",
          "highlight": true,
          "highlightColor": "red",
          "method": "datasource",
          "payload": {
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select * from configuration where name ='$device';",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [
            {
              "id": "current",
              "name": "Current Values"
            },
            {
              "id": "new",
              "name": "New Values"
            }
          ],
          "variant": "split"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "secondary"
        },
        "resetAction": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);",
          "confirm": false,
          "getPayload": "return {\n  rawSql: '',\n  format: 'table',\n}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "if (context.panel.response && context.panel.response.state === 'Done') {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.panel.initialRequest();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": true,
          "contentType": "application/json",
          "datasource": "PostgreSQL",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\n/**\n * Data Source payload\n */\nreturn payload;",
          "method": "datasource",
          "payload": {
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "update configuration set min=${payload.min}, max=${payload.max}, speed=${payload.speed} where name='$device'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "payloadMode": "custom"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.7.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PCC52D03280B7034C"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select * from configuration where name ='$device';",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Data Source",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PCC52D03280B7034C"
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 4,
        "y": 17
      },
      "id": 3,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": ["name", "oldValue", "newValue"],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "fieldName": "max",
            "id": "max",
            "labelWidth": 10,
            "options": [],
            "queryField": {
              "label": "A:max",
              "refId": "A",
              "value": "max"
            },
            "section": "current",
            "title": "Max",
            "tooltip": "",
            "type": "disabled",
            "uid": "8285e945-b1cf-4dd6-9efd-8e322196222a",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "min",
            "id": "min",
            "labelWidth": 10,
            "options": [],
            "queryField": {
              "label": "A:min",
              "refId": "A",
              "value": "min"
            },
            "section": "current",
            "title": "Min",
            "tooltip": "",
            "type": "disabled",
            "uid": "6d3ca353-178b-4a7a-b23d-e548cf3d2437",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "speed",
            "id": "speed",
            "labelWidth": 10,
            "options": [],
            "queryField": {
              "label": "A:speed",
              "refId": "A",
              "value": "speed"
            },
            "section": "current",
            "title": "Speed",
            "tooltip": "",
            "type": "disabled",
            "uid": "b7c38a6c-6c59-41db-a439-1964d20e660b",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "max",
            "id": "max",
            "labelWidth": 10,
            "queryField": {
              "label": "A:max",
              "refId": "A",
              "value": "max"
            },
            "section": "new",
            "title": "Max",
            "tooltip": "",
            "type": "number",
            "uid": "3d3cf24f-7611-482d-b27b-b55621745dda",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "min",
            "id": "min",
            "labelWidth": 10,
            "queryField": {
              "label": "A:min",
              "refId": "A",
              "value": "min"
            },
            "section": "new",
            "title": "Min",
            "tooltip": "",
            "type": "number",
            "uid": "bc2c6772-5bbd-456d-9fe2-f1824c373c68",
            "unit": "",
            "value": 0,
            "width": 20
          },
          {
            "fieldName": "speed",
            "id": "speed",
            "labelWidth": 10,
            "max": 100,
            "min": 0,
            "queryField": {
              "label": "A:speed",
              "refId": "A",
              "value": "speed"
            },
            "section": "new",
            "step": 1,
            "title": "Speed",
            "tooltip": "",
            "type": "slider",
            "uid": "1918dc47-f686-4ca2-aeb3-7f21c360f621",
            "unit": "",
            "value": 0
          }
        ],
        "initial": {
          "code": "",
          "contentType": "application/json",
          "datasource": "PostgreSQL",
          "getPayload": "return {\n  rawSql: \"select * from configuration where name ='$device';\",\n  format: 'table',\n}",
          "highlight": true,
          "highlightColor": "red",
          "method": "query",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [
            {
              "id": "current",
              "name": "Current Values"
            },
            {
              "id": "new",
              "name": "New Values"
            }
          ],
          "variant": "split"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "secondary"
        },
        "resetAction": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);",
          "confirm": false,
          "getPayload": "return {\n  rawSql: '',\n  format: 'table',\n}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "if (context.panel.response && context.panel.response.state === 'Done') {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.panel.initialRequest();\n} else {\n  context.grafana.notifyError(['Update', 'An error occured updating values.']);\n}",
          "confirm": true,
          "contentType": "application/json",
          "datasource": "PostgreSQL",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\n/**\n * Data Source payload\n */\nreturn payload;",
          "method": "datasource",
          "payload": {
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "update configuration set min=${payload.min}, max=${payload.max}, speed=${payload.speed} where name='$device'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "payloadMode": "custom"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.7.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PCC52D03280B7034C"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select * from configuration where name ='$device';",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Query",
      "type": "volkovlabs-form-panel"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "device1",
          "value": "device1"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PCC52D03280B7034C"
        },
        "definition": "select distinct name from configuration;",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "device",
        "options": [],
        "query": "select distinct name from configuration;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Configuration",
  "uid": "d185bf58-9e0a-4373-befa-3905a18af42e",
  "version": 5,
  "weekStart": ""
}
